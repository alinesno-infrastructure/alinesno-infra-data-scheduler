server:
  port: 30208

# spring 配置
spring:
  application:
    name: alinesno-infra-data-scheduler-boot
    id: 1865936259484930048
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/dev_alinesno_infra_data_scheduler_v100?serverTimezone=GMT%2B8&zeroDateTimeBehavior=CONVERT_TO_NULL
    username: root
    password: adminer

    # druid-specific 配置
    druid:
      # 连接池大小
      initial-size: 10       # 初始连接数
      min-idle: 10           # 最小空闲连接数
      max-active: 150         # 最大连接数（根据并发和 DB 能力调整）
      max-wait: 60000        # 获取连接最大等待毫秒数
      # 校验/回收
      validation-query: SELECT 1
      test-on-borrow: false
      test-on-return: false
      test-while-idle: true
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      # 监控与防火墙
      filters: stat,wall
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=3000
      # 其他可选项
      keep-alive: true

  data:
    redis:
      host: 127.0.0.1
      port: 6379
#      password: aip@local
    mongodb:
      uri: mongodb://localhost:27017/infra_scheduler_logs
      database: infra_scheduler_logs
  servlet:
    multipart:
      max-file-size: 512MB
      max-request-size: 512MB
      enabled: true
      file-size-threshold: 0
  quartz:
    #是否自动启动
    autoStartup: false
    #相关属性配置
    properties:
      org:
        quartz:
          scheduler:
            #调度器实例名称
            instanceName: clusteredScheduler
            #调度器实例编号自动生成
            instanceId: AUTO
          jobStore:
            txIsolationLevelSerializable: false
            #持久化方式配置
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            #持久化方式配置数据驱动，MySQL数据库
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            #quartz相关数据表前缀名
            tablePrefix: QRTZ_
            #开启分布式部署
            isClustered: true
            #分布式节点有效性检查时间间隔，单位：毫秒
            clusterCheckinInterval: 10000
            # 过期时间的问题
            misfireThreshold: 6000
            #配置是否使用
            useProperties: false
          threadPool:
            #线程池实现类
            class: org.quartz.simpl.SimpleThreadPool
            #执行最大并发线程数量
            threadCount: 20
            #线程优先级
            threadPriority: 5
            #配置是否启动自动加载数据库内的定时任务，默认true
            threadsInheritContextClassLoaderOfInitializingThread: true
    #数据库方式
    job-store-type: jdbc
    #初始化表结构
    jdbc:
      initialize-schema: never # always/never
  devtools:
    restart:
      enabled: true


# actable配置
actable:
  table:
    auto: update
  model:
    pack: com.alinesno.infra.data.scheduler.entity;com.alinesno.infra.data.scheduler.llm.entity;com.alinesno.infra.data.scheduler.workflow.entity;
  database:
    type: mysql
  index:
    prefix: alinesno_data_scheduler_idx_
  unique:
    prefix: alinesno_data_scheduler_uni_

# wechat token
alinesno:
  security:
    # 排除路径
    excludes:
      - /sso/**
      - /logout
      - /api/infra/data/scheduler/fileStore/displayImage/*
  infra:
    gateway:
      host: http://alinesno-infra-base-gateway-proxy-application.beta.base.infra.linesno.com
  data:
    scheduler:
      workspacePath: ${user.home}/.infra-data-scheduler

# workflow工作流日志配置
node:
  log:
    queue-size: 20000
    batch-size: 200
    flush-interval-ms: 1000
    max-retries: 3
    retry-backoff-ms: 500
    fallback-file: /var/log/node_logs_failures.log
    workers: 1
    collection: node_logs
    ttl-days: 7

# sa-token配置
sa-token:
  token-name: Authorization
  host-path: http://alinesno-infra-base-identity-auth-application.beta.base.infra.linesno.com
  sso:
    auth-url: ${sa-token.host-path}/login
    is-http: true
    check-ticket-url: ${sa-token.host-path}/prod-api/sso/checkTicket
    slo-url: ${sa-token.host-path}/prod-api/sso/signout
    get-data-url: ${sa-token.host-path}/prod-api/sso/getData
  sign:
    secret-key: kQwIOrYvnXmSDkwEiFngrKidMcdrgKor


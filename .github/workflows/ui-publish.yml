name: Build and Publish

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    env:
      # 版本管理
      PROJECT_NAME: 'alinesno-infra-data-scheduler-ui'
      PRO_VERSION: '1.0.0-SNAPSHOT'
      CURRENT_PROFIRE: 'dev'
      BUILD_NUMBER: ${{ github.run_number }}

      # 容器镜像
      ALIYUN_CR_REGISTORY: 'registry.cn-shenzhen.aliyuncs.com'
      ALIYUN_CR_NAMESPACE: 'alinesno-infra-platform'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Maven Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Create Nexus Config File
        run: |
          echo '<?xml version="1.0" encoding="UTF-8"?>' > nexus-config.xml
          echo '<settings>' >> nexus-config.xml

          echo '  <servers>' >> nexus-config.xml
          echo '    <server>' >> nexus-config.xml
          echo '      <id>rdc-releases</id>' >> nexus-config.xml
          echo '      <username>${{ secrets.NEXUS_USERNAME }}</username>' >> nexus-config.xml
          echo '      <password>${{ secrets.NEXUS_PASSWORD }}</password>' >> nexus-config.xml
          echo '    </server>' >> nexus-config.xml
          echo '    <server>' >> nexus-config.xml
          echo '      <id>rdc-snapshots</id>' >> nexus-config.xml
          echo '      <username>${{ secrets.NEXUS_USERNAME }}</username>' >> nexus-config.xml
          echo '      <password>${{ secrets.NEXUS_PASSWORD }}</password>' >> nexus-config.xml
          echo '    </server>' >> nexus-config.xml
          echo '  </servers>' >> nexus-config.xml

          echo '  <mirrors>' >> nexus-config.xml
          echo '    <mirror>' >> nexus-config.xml
          echo '      <id>mirror</id>' >> nexus-config.xml
          echo '      <mirrorOf>central,jcenter,!rdc-releases,!rdc-snapshots</mirrorOf>' >> nexus-config.xml
          echo '      <name>mirror</name>' >> nexus-config.xml
          echo '      <url>https://repo.maven.apache.org/maven2</url>' >> nexus-config.xml
          echo '    </mirror>' >> nexus-config.xml
          echo '    <mirror>' >> nexus-config.xml
          echo '      <id>rdc-releases</id>' >> nexus-config.xml
          echo '      <mirrorOf>releases</mirrorOf>' >> nexus-config.xml
          echo '      <url>${{ secrets.NEXUS_REPOSITORY_RELEASE }}</url>' >> nexus-config.xml
          echo '    </mirror>' >> nexus-config.xml
          echo '    <mirror>' >> nexus-config.xml
          echo '      <id>rdc-snapshots</id>' >> nexus-config.xml
          echo '      <mirrorOf>snapshots</mirrorOf>' >> nexus-config.xml
          echo '      <url>${{ secrets.NEXUS_REPOSITORY_SNAPSHOT }}</url>' >> nexus-config.xml
          echo '    </mirror>' >> nexus-config.xml
          echo '  </mirrors>' >> nexus-config.xml

          echo '  <profiles>' >> nexus-config.xml
          echo '    <profile>' >> nexus-config.xml
          echo '      <id>rdc</id>' >> nexus-config.xml
          echo '      <properties>' >> nexus-config.xml
          echo '        <altReleaseDeploymentRepository>' >> nexus-config.xml
          echo '          rdc-releases::default::${{ secrets.NEXUS_REPOSITORY_RELEASE }}' >> nexus-config.xml
          echo '        </altReleaseDeploymentRepository>' >> nexus-config.xml
          echo '        <altSnapshotDeploymentRepository>' >> nexus-config.xml
          echo '          rdc-snapshots::default::${{ secrets.NEXUS_REPOSITORY_SNAPSHOT }}' >> nexus-config.xml
          echo '        </altSnapshotDeploymentRepository>' >> nexus-config.xml
          echo '      </properties>' >> nexus-config.xml
          echo '      <repositories>' >> nexus-config.xml
          echo '        <repository>' >> nexus-config.xml
          echo '          <id>central</id>' >> nexus-config.xml
          echo '          <url>https://repo.maven.apache.org/maven2</url>' >> nexus-config.xml
          echo '          <releases>' >> nexus-config.xml
          echo '            <enabled>true</enabled>' >> nexus-config.xml
          echo '          </releases>' >> nexus-config.xml
          echo '          <snapshots>' >> nexus-config.xml
          echo '            <enabled>false</enabled>' >> nexus-config.xml
          echo '          </snapshots>' >> nexus-config.xml
          echo '        </repository>' >> nexus-config.xml
          echo '        <repository>' >> nexus-config.xml
          echo '          <id>snapshots</id>' >> nexus-config.xml
          echo '          <url>https://repo.maven.apache.org/maven2</url>' >> nexus-config.xml
          echo '          <releases>' >> nexus-config.xml
          echo '            <enabled>false</enabled>' >> nexus-config.xml
          echo '          </releases>' >> nexus-config.xml
          echo '          <snapshots>' >> nexus-config.xml
          echo '            <enabled>true</enabled>' >> nexus-config.xml
          echo '          </snapshots>' >> nexus-config.xml
          echo '        </repository>' >> nexus-config.xml
          echo '        <repository>' >> nexus-config.xml
          echo '          <id>rdc-releases</id>' >> nexus-config.xml
          echo '          <url>${{ secrets.NEXUS_REPOSITORY_RELEASE }}</url>' >> nexus-config.xml
          echo '          <releases>' >> nexus-config.xml
          echo '            <enabled>true</enabled>' >> nexus-config.xml
          echo '          </releases>' >> nexus-config.xml
          echo '          <snapshots>' >> nexus-config.xml
          echo '            <enabled>false</enabled>' >> nexus-config.xml
          echo '          </snapshots>' >> nexus-config.xml
          echo '        </repository>' >> nexus-config.xml
          echo '        <repository>' >> nexus-config.xml
          echo '          <id>rdc-snapshots</id>' >> nexus-config.xml
          echo '          <url>${{ secrets.NEXUS_REPOSITORY_SNAPSHOT }}</url>' >> nexus-config.xml
          echo '          <releases>' >> nexus-config.xml
          echo '            <enabled>false</enabled>' >> nexus-config.xml
          echo '          </releases>' >> nexus-config.xml
          echo '          <snapshots>' >> nexus-config.xml
          echo '            <enabled>true</enabled>' >> nexus-config.xml
          echo '          </snapshots>' >> nexus-config.xml
          echo '        </repository>' >> nexus-config.xml
          echo '      </repositories> ' >> nexus-config.xml
          echo '    </profile>' >> nexus-config.xml
          echo '  </profiles>' >> nexus-config.xml

          echo '  <activeProfiles>' >> nexus-config.xml
          echo '    <activeProfile>rdc</activeProfile>' >> nexus-config.xml
          echo '  </activeProfiles>' >> nexus-config.xml
          echo '</settings>' >> nexus-config.xml

      - name: Build and Deploy to Nexus
        run: |
          mvn clean package -f ${{ env.PROJECT_NAME }}/pom.xml --settings nexus-config.xml

      - name: Login to Aliyun Container Registry (ACR)
        uses: aliyun/acr-login@v1
        with:
          login-server: ${{ env.ALIYUN_CR_REGISTORY }}
          region-id: cn-shenzhen  # 3
          username: "${{ secrets.ALIYUN_CR_USERNAME }}"
          password: "${{ secrets.ALIYUN_CR_PASSWORD }}"

      - name: Build Docker image
        run: |
          cd ${{ env.PROJECT_NAME }}
          cp -r dist ./docker/
          docker build -t ${{ env.ALIYUN_CR_REGISTORY }}/${{ env.ALIYUN_CR_NAMESPACE }}/${{ env.PROJECT_NAME }}:${{ env.PRO_VERSION }}.${{ env.BUILD_NUMBER }} ./docker
          docker push ${{ env.ALIYUN_CR_REGISTORY }}/${{ env.ALIYUN_CR_NAMESPACE }}/${{ env.PROJECT_NAME }}:${{ env.PRO_VERSION }}.${{ env.BUILD_NUMBER }}

      - name: local remote scp
        uses: cross-the-world/scp-pipeline@master
        with:
          host: ${{ secrets.SERVER_BETA_HOST_02 }}
          port: ${{ secrets.SERVER_BETA_PORT_02 }}
          user: ${{ secrets.SERVER_BETA_USER_02 }}
          pass: ${{ secrets.SERVER_BETA_KEY_02 }}
          local: "./deploy/*"
          remote: /home/github-action/${{ env.PROJECT_NAME }}

      - name: SSH Pipelines
        uses: cross-the-world/ssh-pipeline@master
        env:
          WELCOME: "ssh pipeline"
        with:
          host: ${{ secrets.SERVER_BETA_HOST_02 }}
          port: ${{ secrets.SERVER_BETA_PORT_02 }}
          user: ${{ secrets.SERVER_BETA_USER_02 }}
          pass: ${{ secrets.SERVER_BETA_KEY_02 }}
          connect_timeout: 30s
          script: |
            export PROJECT_NAME=${{ env.PROJECT_NAME }}
            export VERSION=${{ env.PRO_VERSION }}.${{ env.BUILD_NUMBER }}

            export ALIYUN_CR_REGISTORY=${{ env.ALIYUN_CR_REGISTORY }}
            export ALIYUN_CR_NAMESPACE=${{ env.ALIYUN_CR_NAMESPACE }}
            export NAMESPACE=${{ secrets.K8S_NAMESPACE }}

            export INFRA_DEV_DOMAIN=${{ secrets.INFRA_BETA_DATA_DOMAIN }}

            envsubst < /home/github-action/${{ env.PROJECT_NAME }}/kubernetes-admin-${{ env.CURRENT_PROFIRE }}.yml | kubectl apply -f -